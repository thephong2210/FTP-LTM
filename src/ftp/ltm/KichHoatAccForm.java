/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ftp.ltm;

import java.awt.event.WindowEvent;
import java.io.BufferedWriter;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author theph
 */
public class KichHoatAccForm extends javax.swing.JFrame {

    /**
     * Creates new form nhapOTP
     */
    static String OTP;
    static User User;
    private static Socket socket = null;
    private static DataInputStream din = null;
    private static DataOutputStream dout = null;
    Thread threadTimeOut;

    public KichHoatAccForm(String OTP, User user, Socket socket) {
        initComponents();
        this.OTP = OTP;
        this.User = user;
        this.socket = socket;
        jLabel_username.setText(User.username);
        start(socket);
        // time out 10p
        threadTimeOut = new Thread() {
            @Override
            public void run() {
                int phut = 9;
                int giay = 60;
                while (phut >= 0) {

                    while (giay >= 0) {
                        try {
                            Thread.sleep(1000);
                        } catch (InterruptedException ex) {
                            Logger.getLogger(KichHoatAccForm.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        giay--;
                        jLabel_timeOUT.setText(phut + " : " + giay);

                    }
                    phut--;
                    giay = 59;
                    jLabel_timeOUT.setText(phut + " : " + giay);
                    if (phut < 0) {
                        jLabel_timeOUT.setText("Hết Giờ");
                        break;
                    }
                }
            }

        };
        threadTimeOut.start();
    }

    public void start(Socket socket) {
        try {
            din = new DataInputStream(socket.getInputStream());
            dout = new DataOutputStream(socket.getOutputStream());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Chưa mở server");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTextField_OTP = new javax.swing.JTextField();
        jbutton_ok = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel_timeOUT = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel_username = new javax.swing.JLabel();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("FTP - Xác nhận OTP");

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel1.setText("Xác Nhận OTP");

        jbutton_ok.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jbutton_ok.setText("OK");
        jbutton_ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbutton_okActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel2.setText("Thời gian còn lại :");

        jLabel_timeOUT.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel_timeOUT.setText("10:00");

        jLabel_username.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel_username.setText("Username");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(125, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(109, 109, 109))
            .addGroup(layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextField_OTP, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbutton_ok))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addComponent(jLabel_timeOUT, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(16, 16, 16))
                    .addComponent(jLabel_username, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_username)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbutton_ok)
                    .addComponent(jTextField_OTP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel_timeOUT)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbutton_okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbutton_okActionPerformed

        String time = jLabel_timeOUT.getText();

        if (time.equals("Hết Giờ")) {
            JOptionPane.showMessageDialog(this, "Hết thời gian 10p\n bạn sẻ bị đóng chương trình");
            this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
        } else {
            if (jTextField_OTP.getText().equals(OTP)) {
                JOptionPane.showMessageDialog(this, "Tài khoản kích hoạt thành công ");
                String info_user = User.username + ";" + User.pass + ";" + User.hoten + ";" + User.gioitinh + ";" + User.ngaysinh;
                try {
                    dout.writeUTF(info_user);
                    dout.flush();
                    dout.writeUTF(User.username);
                    dout.flush();
                } catch (IOException ex) {
                    Logger.getLogger(KichHoatAccForm.class.getName()).log(Level.SEVERE, null, ex);
                }
                loginForm f = new loginForm(socket);
                f.setVisible(true);
                f.pack();
                f.setLocationRelativeTo(null);
                f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                this.dispose();

            } else if (jTextField_OTP.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập mã OTP");

            } else {
                JOptionPane.showMessageDialog(this, "Mã OTP sai vui lòng kiểm tra lại");
            }
        }

    }//GEN-LAST:event_jbutton_okActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KichHoatAccForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KichHoatAccForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KichHoatAccForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KichHoatAccForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KichHoatAccForm(OTP, User, socket).setVisible(true);

            }
        });

    }

    public void writeFile(User user) {
        // ghi file info_user
        try {
            String content = user.username + ";" + user.pass + ";" + user.hoten + ";" + user.gioitinh + ";" + user.ngaysinh + "\n";
            //Specify the file name and path here
            File file = new File(".\\src\\ftp\\ltm\\info_user.txt");

            /* This logic is to create the file if the
         * file is not already present
             */
            if (!file.exists()) {
                file.createNewFile();
            }

            //Here true is to append the content to file
            FileWriter fw = new FileWriter(file, true);
            //BufferedWriter writer give better performance
            BufferedWriter bw = new BufferedWriter(fw);
            bw.write(content);
            //Closing BufferedWriter Stream
            bw.close();

            System.out.println("Đã thêm tài khoản vào file info");

        } catch (IOException ioe) {
            System.out.println("Exception occurred:");
            ioe.printStackTrace();
        }
        //ghi file quyen_user
        try {
            String content = user.username + ";yes;yes;yes;yes;1000;100;100\n";
            //Specify the file name and path here
            File file = new File(".\\src\\ftp\\ltm\\quyen_user.txt");

            /* This logic is to create the file if the
         * file is not already present
             */
            if (!file.exists()) {
                file.createNewFile();
            }

            //Here true is to append the content to file
            FileWriter fw = new FileWriter(file, true);
            //BufferedWriter writer give better performance
            BufferedWriter bw = new BufferedWriter(fw);
            bw.write(content);
            //Closing BufferedWriter Stream
            bw.close();

            System.out.println("Đã thêm tài khoản vào file quyền");

        } catch (IOException ioe) {
            System.out.println("Exception occurred:");
            ioe.printStackTrace();
        }

    }

    public void createDir(String user) {
        File dir = new File(".//FILE-SERVER//" + user);
        if (dir.mkdir()) {
            System.out.println("Create directory " + dir.getAbsolutePath() + " success.");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel_timeOUT;
    private javax.swing.JLabel jLabel_username;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField_OTP;
    private javax.swing.JButton jbutton_ok;
    // End of variables declaration//GEN-END:variables
}
